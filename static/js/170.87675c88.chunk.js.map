{"version":3,"file":"static/js/170.87675c88.chunk.js","mappings":"6PACA,GAAiB,E,SCwCjB,EApCgB,SAAC,GAAmB,IAAjBA,EAAgB,EAAhBA,UACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIN,GAAU,GAFd,SAG2BO,EAAAA,GAAoBN,GAH/C,OAGUO,EAHV,OAIIH,EAAUG,EAASC,KAAKC,SAJ5B,uBAMIV,GAAU,GANd,wEADc,uBAAC,WAAD,wBAUdW,EACD,GAAE,CAACV,EAASD,IAENI,EAAOQ,OAAS,GACrB,eAAIC,UAAWC,EAAAA,WAAf,SACGV,EAAOW,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,2BACE,yBAAG,WAASD,MACZ,cACEJ,UAAWC,EAAAA,YACXK,wBAAyB,CAAEC,OAAO,GAAD,OAAKF,QAJjCF,EAQZ,OAGH,uBAAG,4CAEN,C,6MChCM,SAAeK,IAAtB,4CAAO,OAAP,oBAAO,uGAEUC,EAAAA,EAAAA,IAAA,uCAFV,wEAIHC,EAAU,EAAD,IAJN,+EAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,0FAEUH,EAAAA,EAAAA,IAAA,8BACYG,EADZ,2BAFV,wEAMHF,EAAU,EAAD,IANN,+EAUA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,0FAEUL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAFV,wEAIHJ,EAAU,EAAD,IAJN,+EAQA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,0FAEUL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,4BAFV,wEAIHJ,EAAU,EAAD,IAJN,+EAQA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,0FAEUL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,4BAFV,wEAIHJ,EAAU,EAAD,IAJN,+EAUP,SAASA,EAAUO,GACjBC,EAAAA,OAAAA,QAAA,UAAkBD,EAAME,KAAxB,aAAiCF,EAAMG,SACxC,CAlDDX,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,6NA4CFS,EAAAA,OAAAA,KAAY,CAAEG,oBAAoB,EAAMC,cAAc,G","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.modules.css?f71e","components/Reviews/Reviews.jsx","services/apiService.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as api from '../../services/apiService';\nimport css from './Reviews.modules.css';\n\nconst Reviews = ({ isLoading }) => {\n  const { movieId } = useParams();\n  const [review, setReview] = useState([]);\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        isLoading(true);\n        const response = await api.getMovieReviews(movieId);\n        setReview(response.data.results);\n      } finally {\n        isLoading(false);\n      }\n    }\n    getData();\n  }, [movieId, isLoading]);\n\n  return review.length > 0 ? (\n    <ul className={css.reviewList}>\n      {review.map(({ id, author, content }) => {\n        return (\n          <li key={id}>\n            <p>Author: {author}</p>\n            <p\n              className={css.description}\n              dangerouslySetInnerHTML={{ __html: `${content}` }}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  ) : (\n    <p>We don't have any reviews for this movie</p>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1OTNiZTQ5OGJhM2QxMThlYWQ5ODk5NzFlYTg4YzJkOSIsInN1YiI6IjY0OWRkZjI5MGNlMWJjMDBiMDI1OWE0NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.jMz6oARwZHUH2jOMa_ampqvWJ0AZZPvVj3PI9Zq6I6I';\n\nexport async function getTrending() {\n  try {\n    return await axios.get(`/trending/movie/week?language=en-US`);\n  } catch (error) {\n    showError(error);\n  }\n}\n\nexport async function searchMovies(query) {\n  try {\n    return await axios.get(\n      `/search/movie?query=${query}&language=en-US&page=1`\n    );\n  } catch (error) {\n    showError(error);\n  }\n}\n\nexport async function getMovieDetails(movie_id) {\n  try {\n    return await axios.get(`/movie/${movie_id}?language=en-US`);\n  } catch (error) {\n    showError(error);\n  }\n}\n\nexport async function getMovieCast(movie_id) {\n  try {\n    return await axios.get(`/movie/${movie_id}/credits?language=en-US`);\n  } catch (error) {\n    showError(error);\n  }\n}\n\nexport async function getMovieReviews(movie_id) {\n  try {\n    return await axios.get(`/movie/${movie_id}/reviews?language=en-US`);\n  } catch (error) {\n    showError(error);\n  }\n}\n\nNotify.init({ showOnlyTheLastOne: true, clickToClose: true });\n\nfunction showError(error) {\n  Notify.failure(`${error.code}: ${error.message}`);\n}\n"],"names":["isLoading","movieId","useParams","useState","review","setReview","useEffect","api","response","data","results","getData","length","className","css","map","id","author","content","dangerouslySetInnerHTML","__html","getTrending","axios","showError","searchMovies","query","getMovieDetails","movie_id","getMovieCast","getMovieReviews","error","Notify","code","message","showOnlyTheLastOne","clickToClose"],"sourceRoot":""}